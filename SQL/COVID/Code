/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Converting Data Types

*/

select *
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null 
order by 3,4;

-- Select Data that we are going to be starting with  

select location, date, total_cases, new_cases, total_deaths, population
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
order by 1,2;

-- Looking at Total Cases Vs Total Deaths
-- Shows likelihood of dying if you contract COVID in yur country 

select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
order by 1,2;

-- Looking at Total Cases vs Population 
-- Shows what percentage of population got COVID

select location, date, total_cases, population, (total_cases/population)*100 as  percent_population_infected
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
order by 1,2;

-- Looking at Countries with Highest Infection Rate compared to Population 

select location, population, max(total_cases) as highest_infection_count, max(total_cases/population)*100 as percent_population_infected
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
group by location, population
order by percent_population_infected desc;

-- Looking at Countries with Highest Death Count per Population 

select location, max(cast(total_deaths as int)) as total_death_count
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
group by location
order by total_death_count desc;

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

select continent, max(cast(total_deaths as int)) as total_death_count
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
group by continent 
order by total_death_count desc;

-- GLOBAL NUMBERS

select date, sum(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(cast(new_deaths as int))/sum(new_cases)*100 as death_percentage
from portfolio-projects-408601.Covid.CovidDeaths
where continent is not null
group by date
order by 1,2;

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

select 
dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
sum(cast(vac.new_vaccinations as int)) over (partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from
portfolio-projects-408601.Covid.CovidDeaths AS dea
join
portfolio-projects-408601.Covid.CovidVaccinations AS vac
on dea.location = vac.location
and dea.date = vac.date
where
dea.continent is not null
order by 
2, 3;

-- Using CTE to perform Calculation on Partition By in previous query

with PopVsVac
as
(
select 
dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
sum(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from
portfolio-projects-408601.Covid.CovidDeaths AS dea
join
portfolio-projects-408601.Covid.CovidVaccinations AS vac
on dea.location = vac.location
and dea.date = vac.date
where
dea.continent is not null
order by 
2, 3 
)

SELECT
*, (rolling_people_vaccinated/population)*100
FROM 
PopVsVac;

-- Using Temp Table to perform Calculation on Partition By in previous query

CREATE OR REPLACE TABLE portfolio-projects-408601.Covid.PercentPopulationVaccinated
(
continent STRING,
location STRING,
date DATE,
population FLOAT64,
new_vaccinations FLOAT64,
rolling_people_vaccinated FLOAT64
);

insert into portfolio-projects-408601.Covid.PercentPopulationVaccinated
select 
dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
sum(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from
portfolio-projects-408601.Covid.CovidDeaths AS dea
join
portfolio-projects-408601.Covid.CovidVaccinations AS vac
on dea.location = vac.location
and dea.date = vac.date
where
dea.continent is not null
order by 
2, 3;

select *, (rolling_people_vaccinated/Population)*100
from portfolio-projects-408601.Covid.PercentPopulationVaccinated;
